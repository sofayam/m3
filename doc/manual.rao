% This file was generated by './rail' from 'manual.rai'
\rail@p {-t}
\rail@t {lbr}
\rail@t {rbr}
\rail@t {at}
\rail@t {tilde}
\rail@i {1}{ Compilation : CapsuleInterface | Capsule | Interface | Module | GenericInterface | GenericModule ; }
\rail@o {1}{
% BAR y=0 nexty=6
% . IDENT CapsuleInterface y=0 nexty=1
% . IDENT Capsule y=1 nexty=2
% . IDENT Interface y=2 nexty=3
% . IDENT Module y=3 nexty=4
% . IDENT GenericInterface y=4 nexty=5
% . IDENT GenericModule y=5 nexty=6
\rail@begin{6}{Compilation}
\rail@bar
\rail@nont{CapsuleInterface}[]
\rail@nextbar{1}
\rail@nont{Capsule}[]
\rail@nextbar{2}
\rail@nont{Interface}[]
\rail@nextbar{3}
\rail@nont{Module}[]
\rail@nextbar{4}
\rail@nont{GenericInterface}[]
\rail@nextbar{5}
\rail@nont{GenericModule}[]
\rail@endbar
\rail@end
}
\rail@i {2}{ CapsuleInterface : 'CAPSULE' 'INTERFACE' id ';' (Import *) (Port *) 'END' id '.'; Port : 'PORT' id ':' Protocol ; Protocol : ( tilde )? (TypeName | 'PROTOCOL' (MessageGroup *) 'END' ); MessageGroup : ( 'SYNCHRONOUS' )? ( 'INCOMING' | 'OUTGOING' ) ( Message + ); Message : 'MESSAGE' id '(' Formals ')' ; }
\rail@o {2}{
% CAT y=0 nexty=2
% . STRNG 'CAPSULE' y=0 nexty=1
% . STRNG 'INTERFACE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG ';' y=0 nexty=1
% . PLUS y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT Import y=1 nexty=2
% . PLUS y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT Port y=1 nexty=2
% . STRNG 'END' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '.' y=0 nexty=1
\rail@begin{2}{CapsuleInterface}
\rail@term{CAPSULE}[]
\rail@term{INTERFACE}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@plus
\rail@nextplus{1}
\rail@cnont{Import}[]
\rail@endplus
\rail@plus
\rail@nextplus{1}
\rail@cnont{Port}[]
\rail@endplus
\rail@term{END}[]
\rail@nont{id}[]
\rail@term{.}[]
\rail@end
% CAT y=0 nexty=1
% . STRNG 'PORT' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG ':' y=0 nexty=1
% . IDENT Protocol y=0 nexty=1
\rail@begin{1}{Port}
\rail@term{PORT}[]
\rail@nont{id}[]
\rail@term{:}[]
\rail@nont{Protocol}[]
\rail@end
% CAT y=0 nexty=3
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT tilde y=1 nexty=2
% . BAR y=0 nexty=3
% . . IDENT TypeName y=0 nexty=1
% . . CAT y=1 nexty=3
% . . . STRNG 'PROTOCOL' y=1 nexty=2
% . . . PLUS y=1 nexty=3
% . . . . EMPTY y=1 nexty=2
% . . . . IDENT MessageGroup y=2 nexty=3
% . . . STRNG 'END' y=1 nexty=2
\rail@begin{3}{Protocol}
\rail@bar
\rail@nextbar{1}
\rail@token{tilde}[]
\rail@endbar
\rail@bar
\rail@nont{TypeName}[]
\rail@nextbar{1}
\rail@term{PROTOCOL}[]
\rail@plus
\rail@nextplus{2}
\rail@cnont{MessageGroup}[]
\rail@endplus
\rail@term{END}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . STRNG 'SYNCHRONOUS' y=1 nexty=2
% . BAR y=0 nexty=2
% . . STRNG 'INCOMING' y=0 nexty=1
% . . STRNG 'OUTGOING' y=1 nexty=2
% . PLUS y=0 nexty=2
% . . IDENT Message y=0 nexty=1
% . . EMPTY y=1 nexty=2
\rail@begin{2}{MessageGroup}
\rail@bar
\rail@nextbar{1}
\rail@term{SYNCHRONOUS}[]
\rail@endbar
\rail@bar
\rail@term{INCOMING}[]
\rail@nextbar{1}
\rail@term{OUTGOING}[]
\rail@endbar
\rail@plus
\rail@nont{Message}[]
\rail@nextplus{1}
\rail@endplus
\rail@end
% CAT y=0 nexty=1
% . STRNG 'MESSAGE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '(' y=0 nexty=1
% . IDENT Formals y=0 nexty=1
% . STRNG ')' y=0 nexty=1
\rail@begin{1}{Message}
\rail@term{MESSAGE}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Formals}[]
\rail@term{)}[]
\rail@end
}
\rail@i {3}{ Capsule : 'CAPSULE' id ( 'IMPLEMENTS' id )? ';' \\ ( Import * ) ( UseCapsule * ) CapsuleBlock id '.'; CapsuleBlock : ( Declaration * ) ( Connections ? ) 'BEGIN' Statements 'END' ; UseCapsule : 'USECAPSULE' id ';' ; Connections : 'CONNECT' ( id ( '->' | '<=>' ) id ';' + ) ; }
\rail@o {3}{
% CAT y=0 nexty=5
% . STRNG 'CAPSULE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . STRNG 'IMPLEMENTS' y=1 nexty=2
% . . . IDENT id y=1 nexty=2
% . STRNG ';' y=0 nexty=1
% . CR y=0 nexty=4
% . PLUS y=3 nexty=5
% . . EMPTY y=3 nexty=4
% . . IDENT Import y=4 nexty=5
% . PLUS y=3 nexty=5
% . . EMPTY y=3 nexty=4
% . . IDENT UseCapsule y=4 nexty=5
% . IDENT CapsuleBlock y=3 nexty=4
% . IDENT id y=3 nexty=4
% . STRNG '.' y=3 nexty=4
\rail@begin{5}{Capsule}
\rail@term{CAPSULE}[]
\rail@nont{id}[]
\rail@bar
\rail@nextbar{1}
\rail@term{IMPLEMENTS}[]
\rail@nont{id}[]
\rail@endbar
\rail@term{;}[]
\rail@cr{3}
\rail@plus
\rail@nextplus{4}
\rail@cnont{Import}[]
\rail@endplus
\rail@plus
\rail@nextplus{4}
\rail@cnont{UseCapsule}[]
\rail@endplus
\rail@nont{CapsuleBlock}[]
\rail@nont{id}[]
\rail@term{.}[]
\rail@end
% CAT y=0 nexty=2
% . PLUS y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT Declaration y=1 nexty=2
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT Connections y=1 nexty=2
% . STRNG 'BEGIN' y=0 nexty=1
% . IDENT Statements y=0 nexty=1
% . STRNG 'END' y=0 nexty=1
\rail@begin{2}{CapsuleBlock}
\rail@plus
\rail@nextplus{1}
\rail@cnont{Declaration}[]
\rail@endplus
\rail@bar
\rail@nextbar{1}
\rail@nont{Connections}[]
\rail@endbar
\rail@term{BEGIN}[]
\rail@nont{Statements}[]
\rail@term{END}[]
\rail@end
% CAT y=0 nexty=1
% . STRNG 'USECAPSULE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG ';' y=0 nexty=1
\rail@begin{1}{UseCapsule}
\rail@term{USECAPSULE}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@end
% CAT y=0 nexty=3
% . STRNG 'CONNECT' y=0 nexty=1
% . PLUS y=0 nexty=3
% . . CAT y=0 nexty=2
% . . . IDENT id y=0 nexty=1
% . . . BAR y=0 nexty=2
% . . . . STRNG '->' y=0 nexty=1
% . . . . STRNG '<=>' y=1 nexty=2
% . . . IDENT id y=0 nexty=1
% . . . STRNG ';' y=0 nexty=1
% . . EMPTY y=2 nexty=3
\rail@begin{3}{Connections}
\rail@term{CONNECT}[]
\rail@plus
\rail@nont{id}[]
\rail@bar
\rail@term{->}[]
\rail@nextbar{1}
\rail@term{<=>}[]
\rail@endbar
\rail@nont{id}[]
\rail@term{;}[]
\rail@nextplus{2}
\rail@endplus
\rail@end
}
\rail@i {4}{ Declaration : 'Standard Modula-3 Declaration' | Trigger ';' | Activity ';' | State ';' | Start ';' | Intention ';' ; \par
Type : 'Standard Modula-3 Type' | TimerType | ModelingContainerType | ProtocolType ; Statement : 'Standard Modula-3 Statement' | SendSt | NextSt | ForEachSt ; }
\rail@o {4}{
% BAR y=0 nexty=6
% . STRNG 'Standard Modula-3 Declaration' y=0 nexty=1
% . CAT y=1 nexty=2
% . . IDENT Trigger y=1 nexty=2
% . . STRNG ';' y=1 nexty=2
% . CAT y=2 nexty=3
% . . IDENT Activity y=2 nexty=3
% . . STRNG ';' y=2 nexty=3
% . CAT y=3 nexty=4
% . . IDENT State y=3 nexty=4
% . . STRNG ';' y=3 nexty=4
% . CAT y=4 nexty=5
% . . IDENT Start y=4 nexty=5
% . . STRNG ';' y=4 nexty=5
% . CAT y=5 nexty=6
% . . IDENT Intention y=5 nexty=6
% . . STRNG ';' y=5 nexty=6
\rail@begin{6}{Declaration}
\rail@bar
\rail@term{Standard Modula-3 Declaration}[]
\rail@nextbar{1}
\rail@nont{Trigger}[]
\rail@term{;}[]
\rail@nextbar{2}
\rail@nont{Activity}[]
\rail@term{;}[]
\rail@nextbar{3}
\rail@nont{State}[]
\rail@term{;}[]
\rail@nextbar{4}
\rail@nont{Start}[]
\rail@term{;}[]
\rail@nextbar{5}
\rail@nont{Intention}[]
\rail@term{;}[]
\rail@endbar
\rail@end
% BAR y=0 nexty=4
% . STRNG 'Standard Modula-3 Type' y=0 nexty=1
% . IDENT TimerType y=1 nexty=2
% . IDENT ModelingContainerType y=2 nexty=3
% . IDENT ProtocolType y=3 nexty=4
\rail@begin{4}{Type}
\rail@bar
\rail@term{Standard Modula-3 Type}[]
\rail@nextbar{1}
\rail@nont{TimerType}[]
\rail@nextbar{2}
\rail@nont{ModelingContainerType}[]
\rail@nextbar{3}
\rail@nont{ProtocolType}[]
\rail@endbar
\rail@end
% BAR y=0 nexty=4
% . STRNG 'Standard Modula-3 Statement' y=0 nexty=1
% . IDENT SendSt y=1 nexty=2
% . IDENT NextSt y=2 nexty=3
% . IDENT ForEachSt y=3 nexty=4
\rail@begin{4}{Statement}
\rail@bar
\rail@term{Standard Modula-3 Statement}[]
\rail@nextbar{1}
\rail@nont{SendSt}[]
\rail@nextbar{2}
\rail@nont{NextSt}[]
\rail@nextbar{3}
\rail@nont{ForEachSt}[]
\rail@endbar
\rail@end
}
\rail@i {5}{ Intention : 'READS' id ';' | 'WRITES'id ';' | 'SENDS' id ';' ; }
\rail@o {5}{
% BAR y=0 nexty=3
% . CAT y=0 nexty=1
% . . STRNG 'READS' y=0 nexty=1
% . . IDENT id y=0 nexty=1
% . . STRNG ';' y=0 nexty=1
% . CAT y=1 nexty=2
% . . STRNG 'WRITES' y=1 nexty=2
% . . IDENT id y=1 nexty=2
% . . STRNG ';' y=1 nexty=2
% . CAT y=2 nexty=3
% . . STRNG 'SENDS' y=2 nexty=3
% . . IDENT id y=2 nexty=3
% . . STRNG ';' y=2 nexty=3
\rail@begin{3}{Intention}
\rail@bar
\rail@term{READS}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@nextbar{1}
\rail@term{WRITES}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@nextbar{2}
\rail@term{SENDS}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@endbar
\rail@end
}
\rail@i {6}{ Activity : 'ACTIVITY' id '(' Formals ')' '=' Block id ('AFTER' TimeExpr )? ';' ; }
\rail@o {6}{
% CAT y=0 nexty=2
% . STRNG 'ACTIVITY' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '(' y=0 nexty=1
% . IDENT Formals y=0 nexty=1
% . STRNG ')' y=0 nexty=1
% . STRNG '=' y=0 nexty=1
% . IDENT Block y=0 nexty=1
% . IDENT id y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . STRNG 'AFTER' y=1 nexty=2
% . . . IDENT TimeExpr y=1 nexty=2
% . STRNG ';' y=0 nexty=1
\rail@begin{2}{Activity}
\rail@term{ACTIVITY}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Formals}[]
\rail@term{)}[]
\rail@term{=}[]
\rail@nont{Block}[]
\rail@nont{id}[]
\rail@bar
\rail@nextbar{1}
\rail@term{AFTER}[]
\rail@nont{TimeExpr}[]
\rail@endbar
\rail@term{;}[]
\rail@end
}
\rail@i {7}{ State : 'STATE' id ( TransitionDecl + ) ';' ; Start : 'START' '=' 'BEGIN' Statements 'END' ';' ; TransitionDecl: 'ON' id '(' Formals ')' '=' Block id ('AFTER' TimeExpr )? ';' ; NextSt : 'NEXT' id ; }
\rail@o {7}{
% CAT y=0 nexty=2
% . STRNG 'STATE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . PLUS y=0 nexty=2
% . . IDENT TransitionDecl y=0 nexty=1
% . . EMPTY y=1 nexty=2
% . STRNG ';' y=0 nexty=1
\rail@begin{2}{State}
\rail@term{STATE}[]
\rail@nont{id}[]
\rail@plus
\rail@nont{TransitionDecl}[]
\rail@nextplus{1}
\rail@endplus
\rail@term{;}[]
\rail@end
% CAT y=0 nexty=1
% . STRNG 'START' y=0 nexty=1
% . STRNG '=' y=0 nexty=1
% . STRNG 'BEGIN' y=0 nexty=1
% . IDENT Statements y=0 nexty=1
% . STRNG 'END' y=0 nexty=1
% . STRNG ';' y=0 nexty=1
\rail@begin{1}{Start}
\rail@term{START}[]
\rail@term{=}[]
\rail@term{BEGIN}[]
\rail@nont{Statements}[]
\rail@term{END}[]
\rail@term{;}[]
\rail@end
% CAT y=0 nexty=2
% . STRNG 'ON' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '(' y=0 nexty=1
% . IDENT Formals y=0 nexty=1
% . STRNG ')' y=0 nexty=1
% . STRNG '=' y=0 nexty=1
% . IDENT Block y=0 nexty=1
% . IDENT id y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . STRNG 'AFTER' y=1 nexty=2
% . . . IDENT TimeExpr y=1 nexty=2
% . STRNG ';' y=0 nexty=1
\rail@begin{2}{TransitionDecl}
\rail@term{ON}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Formals}[]
\rail@term{)}[]
\rail@term{=}[]
\rail@nont{Block}[]
\rail@nont{id}[]
\rail@bar
\rail@nextbar{1}
\rail@term{AFTER}[]
\rail@nont{TimeExpr}[]
\rail@endbar
\rail@term{;}[]
\rail@end
% CAT y=0 nexty=1
% . STRNG 'NEXT' y=0 nexty=1
% . IDENT id y=0 nexty=1
\rail@begin{1}{NextSt}
\rail@term{NEXT}[]
\rail@nont{id}[]
\rail@end
}
\rail@i {8}{ SendSt : 'SEND' id '(' Actuals ')' ('AFTER' TimeExpr)? ; SendSt : 'REPLY' id '(' Actuals ')' ('AFTER' TimeExpr)? ; CallSt : 'CALL' id '(' Actuals ')' ; }
\rail@o {8}{
% CAT y=0 nexty=2
% . STRNG 'SEND' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '(' y=0 nexty=1
% . IDENT Actuals y=0 nexty=1
% . STRNG ')' y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . STRNG 'AFTER' y=1 nexty=2
% . . . IDENT TimeExpr y=1 nexty=2
\rail@begin{2}{SendSt}
\rail@term{SEND}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Actuals}[]
\rail@term{)}[]
\rail@bar
\rail@nextbar{1}
\rail@term{AFTER}[]
\rail@nont{TimeExpr}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . STRNG 'REPLY' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '(' y=0 nexty=1
% . IDENT Actuals y=0 nexty=1
% . STRNG ')' y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . STRNG 'AFTER' y=1 nexty=2
% . . . IDENT TimeExpr y=1 nexty=2
\rail@begin{2}{SendSt}
\rail@term{REPLY}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Actuals}[]
\rail@term{)}[]
\rail@bar
\rail@nextbar{1}
\rail@term{AFTER}[]
\rail@nont{TimeExpr}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=1
% . STRNG 'CALL' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '(' y=0 nexty=1
% . IDENT Actuals y=0 nexty=1
% . STRNG ')' y=0 nexty=1
\rail@begin{1}{CallSt}
\rail@term{CALL}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Actuals}[]
\rail@term{)}[]
\rail@end
}
\rail@i {9}{ Trigger : 'TRIGGER' id 'ON' Expr ';' ; }
\rail@o {9}{
% CAT y=0 nexty=1
% . STRNG 'TRIGGER' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG 'ON' y=0 nexty=1
% . IDENT Expr y=0 nexty=1
% . STRNG ';' y=0 nexty=1
\rail@begin{1}{Trigger}
\rail@term{TRIGGER}[]
\rail@nont{id}[]
\rail@term{ON}[]
\rail@nont{Expr}[]
\rail@term{;}[]
\rail@end
}
\rail@i {10}{ TimerType : ( 'ONESHOT' | 'PERIODIC' ) ( 'CHANGEABLE' | 'FIXED' ) 'TIMER' ( 'DELAY' Expr )? ; }
\rail@o {10}{
% CAT y=0 nexty=2
% . BAR y=0 nexty=2
% . . STRNG 'ONESHOT' y=0 nexty=1
% . . STRNG 'PERIODIC' y=1 nexty=2
% . BAR y=0 nexty=2
% . . STRNG 'CHANGEABLE' y=0 nexty=1
% . . STRNG 'FIXED' y=1 nexty=2
% . STRNG 'TIMER' y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . STRNG 'DELAY' y=1 nexty=2
% . . . IDENT Expr y=1 nexty=2
\rail@begin{2}{TimerType}
\rail@bar
\rail@term{ONESHOT}[]
\rail@nextbar{1}
\rail@term{PERIODIC}[]
\rail@endbar
\rail@bar
\rail@term{CHANGEABLE}[]
\rail@nextbar{1}
\rail@term{FIXED}[]
\rail@endbar
\rail@term{TIMER}[]
\rail@bar
\rail@nextbar{1}
\rail@term{DELAY}[]
\rail@nont{Expr}[]
\rail@endbar
\rail@end
}
\rail@i {11}{ ResetStatement : 'RESET' ( Integer ) ? ; }
\rail@o {11}{
% CAT y=0 nexty=2
% . STRNG 'RESET' y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT Integer y=1 nexty=2
\rail@begin{2}{ResetStatement}
\rail@term{RESET}[]
\rail@bar
\rail@nextbar{1}
\rail@nont{Integer}[]
\rail@endbar
\rail@end
}
\rail@i {12}{ AssertStatement : 'ASSERT' BooleanExpression ; }
\rail@o {12}{
% CAT y=0 nexty=1
% . STRNG 'ASSERT' y=0 nexty=1
% . IDENT BooleanExpression y=0 nexty=1
\rail@begin{1}{AssertStatement}
\rail@term{ASSERT}[]
\rail@nont{BooleanExpression}[]
\rail@end
}
\rail@i {13}{ AssertStatement : 'ASSERT' BooleanExpression ; }
\rail@o {13}{
% CAT y=0 nexty=1
% . STRNG 'ASSERT' y=0 nexty=1
% . IDENT BooleanExpression y=0 nexty=1
\rail@begin{1}{AssertStatement}
\rail@term{ASSERT}[]
\rail@nont{BooleanExpression}[]
\rail@end
}
\rail@i {14}{ ScaledType : 'SCALED' 'INTEGER' lbr Unit ('*' Value '=' Unit *) rbr ; Unit : id ; Value : int ; }
\rail@o {14}{
% CAT y=0 nexty=2
% . STRNG 'SCALED' y=0 nexty=1
% . STRNG 'INTEGER' y=0 nexty=1
% . IDENT lbr y=0 nexty=1
% . IDENT Unit y=0 nexty=1
% . PLUS y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . IDENT Unit y=1 nexty=2
% . . . STRNG '=' y=1 nexty=2
% . . . IDENT Value y=1 nexty=2
% . . . STRNG '*' y=1 nexty=2
% . IDENT rbr y=0 nexty=1
\rail@begin{2}{ScaledType}
\rail@term{SCALED}[]
\rail@term{INTEGER}[]
\rail@token{lbr}[]
\rail@nont{Unit}[]
\rail@plus
\rail@nextplus{1}
\rail@nont{Unit}[]
\rail@term{=}[]
\rail@nont{Value}[]
\rail@term{*}[]
\rail@endplus
\rail@token{rbr}[]
\rail@end
% IDENT id y=0 nexty=1
\rail@begin{1}{Unit}
\rail@nont{id}[]
\rail@end
% IDENT int y=0 nexty=1
\rail@begin{1}{Value}
\rail@nont{int}[]
\rail@end
}
\rail@i {15}{ ModelingContainerType : 'DICT' ( IndexType )? 'OF' ElementType | 'LIST' 'OF' ElementType ; }
\rail@o {15}{
% BAR y=0 nexty=3
% . CAT y=0 nexty=2
% . . STRNG 'DICT' y=0 nexty=1
% . . BAR y=0 nexty=2
% . . . EMPTY y=0 nexty=1
% . . . IDENT IndexType y=1 nexty=2
% . . STRNG 'OF' y=0 nexty=1
% . . IDENT ElementType y=0 nexty=1
% . CAT y=2 nexty=3
% . . STRNG 'LIST' y=2 nexty=3
% . . STRNG 'OF' y=2 nexty=3
% . . IDENT ElementType y=2 nexty=3
\rail@begin{3}{ModelingContainerType}
\rail@bar
\rail@term{DICT}[]
\rail@bar
\rail@nextbar{1}
\rail@nont{IndexType}[]
\rail@endbar
\rail@term{OF}[]
\rail@nont{ElementType}[]
\rail@nextbar{2}
\rail@term{LIST}[]
\rail@term{OF}[]
\rail@nont{ElementType}[]
\rail@endbar
\rail@end
}
\rail@i {16}{ ForEachSt : 'FOREACH' id 'IN' Expr 'DO' Statements 'END' ; }
\rail@o {16}{
% CAT y=0 nexty=1
% . STRNG 'FOREACH' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG 'IN' y=0 nexty=1
% . IDENT Expr y=0 nexty=1
% . STRNG 'DO' y=0 nexty=1
% . IDENT Statements y=0 nexty=1
% . STRNG 'END' y=0 nexty=1
\rail@begin{1}{ForEachSt}
\rail@term{FOREACH}[]
\rail@nont{id}[]
\rail@term{IN}[]
\rail@nont{Expr}[]
\rail@term{DO}[]
\rail@nont{Statements}[]
\rail@term{END}[]
\rail@end
}
\rail@i {17}{ VariantRecordDecl : 'RECORD' 'CASE' tagDecl 'OF' \\ (CaseAlt *) (ElseAlt ?) 'END' (Fields ?) 'END' ; CaseAlt : Labels (',' Labels *) Fields ; ElseAlt : 'ELSE' Fields ; }
\rail@o {17}{
% CAT y=0 nexty=4
% . STRNG 'RECORD' y=0 nexty=1
% . STRNG 'CASE' y=0 nexty=1
% . IDENT tagDecl y=0 nexty=1
% . STRNG 'OF' y=0 nexty=1
% . CR y=0 nexty=3
% . PLUS y=2 nexty=4
% . . EMPTY y=2 nexty=3
% . . IDENT CaseAlt y=3 nexty=4
% . BAR y=2 nexty=4
% . . EMPTY y=2 nexty=3
% . . IDENT ElseAlt y=3 nexty=4
% . STRNG 'END' y=2 nexty=3
% . BAR y=2 nexty=4
% . . EMPTY y=2 nexty=3
% . . IDENT Fields y=3 nexty=4
% . STRNG 'END' y=2 nexty=3
\rail@begin{4}{VariantRecordDecl}
\rail@term{RECORD}[]
\rail@term{CASE}[]
\rail@nont{tagDecl}[]
\rail@term{OF}[]
\rail@cr{2}
\rail@plus
\rail@nextplus{3}
\rail@cnont{CaseAlt}[]
\rail@endplus
\rail@bar
\rail@nextbar{3}
\rail@nont{ElseAlt}[]
\rail@endbar
\rail@term{END}[]
\rail@bar
\rail@nextbar{3}
\rail@nont{Fields}[]
\rail@endbar
\rail@term{END}[]
\rail@end
% CAT y=0 nexty=2
% . IDENT Labels y=0 nexty=1
% . PLUS y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . IDENT Labels y=1 nexty=2
% . . . STRNG ',' y=1 nexty=2
% . IDENT Fields y=0 nexty=1
\rail@begin{2}{CaseAlt}
\rail@nont{Labels}[]
\rail@plus
\rail@nextplus{1}
\rail@nont{Labels}[]
\rail@term{,}[]
\rail@endplus
\rail@nont{Fields}[]
\rail@end
% CAT y=0 nexty=1
% . STRNG 'ELSE' y=0 nexty=1
% . IDENT Fields y=0 nexty=1
\rail@begin{1}{ElseAlt}
\rail@term{ELSE}[]
\rail@nont{Fields}[]
\rail@end
}
\rail@i {18}{ Command : InputCommand | ElapseCommand | TestValueCommand | MacroCommand ; InputCommand : '>' messageName ( CommandParam ',' + ) ; CommandParam : formalName '=' CommandValue ; CommandValue : integer ( scalingId ? ) | real | id | ListValue | DictValue ; DictValue : lbr ( id ':' CommandValue ',' + ) rbr ; ListValue : '[' ( CommandValue ',' + ) ']' ; \par
ElapseCommand : '?' ( integer | real ) ( 'ps' | 'ns' | AnyValuesInBetween | 'day' | 'year' ) ; TestValueCommand : '==' id ( CommandValue ? ) ; MacroCommand : at id ( id '=' id + ) ; DataPortCommand : ':' 'set' id CommandValue ; }
\rail@o {18}{
% BAR y=0 nexty=4
% . IDENT InputCommand y=0 nexty=1
% . IDENT ElapseCommand y=1 nexty=2
% . IDENT TestValueCommand y=2 nexty=3
% . IDENT MacroCommand y=3 nexty=4
\rail@begin{4}{Command}
\rail@bar
\rail@nont{InputCommand}[]
\rail@nextbar{1}
\rail@nont{ElapseCommand}[]
\rail@nextbar{2}
\rail@nont{TestValueCommand}[]
\rail@nextbar{3}
\rail@nont{MacroCommand}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . STRNG '>' y=0 nexty=1
% . IDENT messageName y=0 nexty=1
% . PLUS y=0 nexty=2
% . . CAT y=0 nexty=1
% . . . IDENT CommandParam y=0 nexty=1
% . . . STRNG ',' y=0 nexty=1
% . . EMPTY y=1 nexty=2
\rail@begin{2}{InputCommand}
\rail@term{>}[]
\rail@nont{messageName}[]
\rail@plus
\rail@nont{CommandParam}[]
\rail@term{,}[]
\rail@nextplus{1}
\rail@endplus
\rail@end
% CAT y=0 nexty=1
% . IDENT formalName y=0 nexty=1
% . STRNG '=' y=0 nexty=1
% . IDENT CommandValue y=0 nexty=1
\rail@begin{1}{CommandParam}
\rail@nont{formalName}[]
\rail@term{=}[]
\rail@nont{CommandValue}[]
\rail@end
% BAR y=0 nexty=6
% . CAT y=0 nexty=2
% . . IDENT integer y=0 nexty=1
% . . BAR y=0 nexty=2
% . . . EMPTY y=0 nexty=1
% . . . IDENT scalingId y=1 nexty=2
% . IDENT real y=2 nexty=3
% . IDENT id y=3 nexty=4
% . IDENT ListValue y=4 nexty=5
% . IDENT DictValue y=5 nexty=6
\rail@begin{6}{CommandValue}
\rail@bar
\rail@nont{integer}[]
\rail@bar
\rail@nextbar{1}
\rail@nont{scalingId}[]
\rail@endbar
\rail@nextbar{2}
\rail@nont{real}[]
\rail@nextbar{3}
\rail@nont{id}[]
\rail@nextbar{4}
\rail@nont{ListValue}[]
\rail@nextbar{5}
\rail@nont{DictValue}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . IDENT lbr y=0 nexty=1
% . PLUS y=0 nexty=2
% . . CAT y=0 nexty=1
% . . . IDENT id y=0 nexty=1
% . . . STRNG ':' y=0 nexty=1
% . . . IDENT CommandValue y=0 nexty=1
% . . . STRNG ',' y=0 nexty=1
% . . EMPTY y=1 nexty=2
% . IDENT rbr y=0 nexty=1
\rail@begin{2}{DictValue}
\rail@token{lbr}[]
\rail@plus
\rail@nont{id}[]
\rail@term{:}[]
\rail@nont{CommandValue}[]
\rail@term{,}[]
\rail@nextplus{1}
\rail@endplus
\rail@token{rbr}[]
\rail@end
% CAT y=0 nexty=2
% . STRNG '[' y=0 nexty=1
% . PLUS y=0 nexty=2
% . . CAT y=0 nexty=1
% . . . IDENT CommandValue y=0 nexty=1
% . . . STRNG ',' y=0 nexty=1
% . . EMPTY y=1 nexty=2
% . STRNG ']' y=0 nexty=1
\rail@begin{2}{ListValue}
\rail@term{[}[]
\rail@plus
\rail@nont{CommandValue}[]
\rail@term{,}[]
\rail@nextplus{1}
\rail@endplus
\rail@term{]}[]
\rail@end
% CAT y=0 nexty=5
% . STRNG '?' y=0 nexty=1
% . BAR y=0 nexty=2
% . . IDENT integer y=0 nexty=1
% . . IDENT real y=1 nexty=2
% . BAR y=0 nexty=5
% . . STRNG 'ps' y=0 nexty=1
% . . STRNG 'ns' y=1 nexty=2
% . . IDENT AnyValuesInBetween y=2 nexty=3
% . . STRNG 'day' y=3 nexty=4
% . . STRNG 'year' y=4 nexty=5
\rail@begin{5}{ElapseCommand}
\rail@term{?}[]
\rail@bar
\rail@nont{integer}[]
\rail@nextbar{1}
\rail@nont{real}[]
\rail@endbar
\rail@bar
\rail@term{ps}[]
\rail@nextbar{1}
\rail@term{ns}[]
\rail@nextbar{2}
\rail@nont{AnyValuesInBetween}[]
\rail@nextbar{3}
\rail@term{day}[]
\rail@nextbar{4}
\rail@term{year}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . STRNG '==' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT CommandValue y=1 nexty=2
\rail@begin{2}{TestValueCommand}
\rail@term{==}[]
\rail@nont{id}[]
\rail@bar
\rail@nextbar{1}
\rail@nont{CommandValue}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . IDENT at y=0 nexty=1
% . IDENT id y=0 nexty=1
% . PLUS y=0 nexty=2
% . . CAT y=0 nexty=1
% . . . IDENT id y=0 nexty=1
% . . . STRNG '=' y=0 nexty=1
% . . . IDENT id y=0 nexty=1
% . . EMPTY y=1 nexty=2
\rail@begin{2}{MacroCommand}
\rail@token{at}[]
\rail@nont{id}[]
\rail@plus
\rail@nont{id}[]
\rail@term{=}[]
\rail@nont{id}[]
\rail@nextplus{1}
\rail@endplus
\rail@end
% CAT y=0 nexty=1
% . STRNG ':' y=0 nexty=1
% . STRNG 'set' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . IDENT CommandValue y=0 nexty=1
\rail@begin{1}{DataPortCommand}
\rail@term{:}[]
\rail@term{set}[]
\rail@nont{id}[]
\rail@nont{CommandValue}[]
\rail@end
}
\rail@i {19}{ SystemArchitecture : 'SYSTEM' 'ARCHITECTURE' id 'IS' Processors Links 'END' ; Processors : ( 'PROCESSOR' id ('SPEED' floatval)? + ) ; Links : ( 'LINK' id ( '->' | '<=>' ) id ('COST' timeval)? * ) ; }
\rail@o {19}{
% CAT y=0 nexty=1
% . STRNG 'SYSTEM' y=0 nexty=1
% . STRNG 'ARCHITECTURE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG 'IS' y=0 nexty=1
% . IDENT Processors y=0 nexty=1
% . IDENT Links y=0 nexty=1
% . STRNG 'END' y=0 nexty=1
\rail@begin{1}{SystemArchitecture}
\rail@term{SYSTEM}[]
\rail@term{ARCHITECTURE}[]
\rail@nont{id}[]
\rail@term{IS}[]
\rail@nont{Processors}[]
\rail@nont{Links}[]
\rail@term{END}[]
\rail@end
% PLUS y=0 nexty=3
% . CAT y=0 nexty=2
% . . STRNG 'PROCESSOR' y=0 nexty=1
% . . IDENT id y=0 nexty=1
% . . BAR y=0 nexty=2
% . . . EMPTY y=0 nexty=1
% . . . CAT y=1 nexty=2
% . . . . STRNG 'SPEED' y=1 nexty=2
% . . . . IDENT floatval y=1 nexty=2
% . EMPTY y=2 nexty=3
\rail@begin{3}{Processors}
\rail@plus
\rail@term{PROCESSOR}[]
\rail@nont{id}[]
\rail@bar
\rail@nextbar{1}
\rail@term{SPEED}[]
\rail@nont{floatval}[]
\rail@endbar
\rail@nextplus{2}
\rail@endplus
\rail@end
% PLUS y=0 nexty=3
% . EMPTY y=0 nexty=1
% . CAT y=1 nexty=3
% . . BAR y=1 nexty=3
% . . . EMPTY y=1 nexty=2
% . . . CAT y=2 nexty=3
% . . . . IDENT timeval y=2 nexty=3
% . . . . STRNG 'COST' y=2 nexty=3
% . . IDENT id y=1 nexty=2
% . . BAR y=1 nexty=3
% . . . STRNG '->' y=1 nexty=2
% . . . STRNG '<=>' y=2 nexty=3
% . . IDENT id y=1 nexty=2
% . . STRNG 'LINK' y=1 nexty=2
\rail@begin{3}{Links}
\rail@plus
\rail@nextplus{1}
\rail@bar
\rail@nextbar{2}
\rail@nont{timeval}[]
\rail@term{COST}[]
\rail@endbar
\rail@nont{id}[]
\rail@bar
\rail@term{->}[]
\rail@nextbar{2}
\rail@term{<=>}[]
\rail@endbar
\rail@nont{id}[]
\rail@term{LINK}[]
\rail@endplus
\rail@end
}
\rail@i {20}{ Mapping : 'SYSTEM' id 'USING' architectureFileName 'IS' Allocations 'END' ; Allocations : ( 'CAPSULE' capsuleName 'ON' 'PROCESSOR' processorName + ) }
\rail@o {20}{
% CAT y=0 nexty=1
% . STRNG 'SYSTEM' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG 'USING' y=0 nexty=1
% . IDENT architectureFileName y=0 nexty=1
% . STRNG 'IS' y=0 nexty=1
% . IDENT Allocations y=0 nexty=1
% . STRNG 'END' y=0 nexty=1
\rail@begin{1}{Mapping}
\rail@term{SYSTEM}[]
\rail@nont{id}[]
\rail@term{USING}[]
\rail@nont{architectureFileName}[]
\rail@term{IS}[]
\rail@nont{Allocations}[]
\rail@term{END}[]
\rail@end
% PLUS y=0 nexty=2
% . CAT y=0 nexty=1
% . . STRNG 'CAPSULE' y=0 nexty=1
% . . IDENT capsuleName y=0 nexty=1
% . . STRNG 'ON' y=0 nexty=1
% . . STRNG 'PROCESSOR' y=0 nexty=1
% . . IDENT processorName y=0 nexty=1
% . EMPTY y=1 nexty=2
\rail@begin{2}{Allocations}
\rail@plus
\rail@term{CAPSULE}[]
\rail@nont{capsuleName}[]
\rail@term{ON}[]
\rail@term{PROCESSOR}[]
\rail@nont{processorName}[]
\rail@nextplus{1}
\rail@endplus
\rail@end
}
\rail@i {21}{ Compilation : CapsuleInterface | Capsule | Interface | Module | GenericInterface | GenericModule ; CapsuleInterface : 'CAPSULE' 'INTERFACE' id ';' ( Import + ) ( Port + ) 'END' id '.'; Port : 'PORT' id ':' Protocol ; Capsule : 'CAPSULE' id ( 'IMPLEMENTS' id )? ';' \\ ( Import * ) ( UseCapsule * ) CapsuleBlock id '.'; CapsuleBlock : ( Declaration * ) ( Connections ? ) 'BEGIN' Statements 'END' ; UseCapsule : 'USECAPSULE' id ';' ; Connections : 'CONNECT' ( id ( '->' | '<=>' ) id ';' + ) ; Declaration : 'Standard Modula-3 Declaration' | 'TRIGGER' id 'ON' Expr ';' | 'ACTIVITY' id '(' Formals ')' '=' Block id ('AFTER' TimeExpr )? ';' | 'STATE' id ( TransitionDecl + ) ';' | 'START' '=' 'BEGIN' Statements 'END' ';' | 'READS' id ';' | 'WRITES'id ';' | 'SENDS' id ';' ; TransitionDecl : 'ON' id '(' Formals ')' '=' Block id ';' ; Type : 'Standard Modula-3 Type' | TimerType | ModelingContainerType | Protocol ; \par
TimerType : ( 'ONESHOT' | 'PERIODIC' ) ( 'CHANGEABLE' | 'FIXED' ) 'TIMER' ( 'DELAY' TimeExpr ) ; \par
Protocol : ( tilde )? (TypeName | 'PROTOCOL' (MessageGroup *) 'END' ); MessageGroup : ( 'SYNCHRONOUS' )? ( 'INCOMING' | 'OUTGOING' ) ( Message + ); Message : 'MESSAGE' id '(' Formals ')' ; \par
ModelingContainerType : 'DICT' ( IndexType )? 'OF' ElementType | 'LIST' 'OF' ElementType ; Statement : 'Standard Modula-3 Statement' | 'SEND' id '(' ( ActualParameter + ) ')' ('AFTER' TimeExpr)? | 'CALL' id '(' ( ActualParameter + ) ')' | 'NEXT' id | 'FOREACH' id 'IN' Expr 'DO' Statements 'END' ; \par
}
\rail@o {21}{
% BAR y=0 nexty=6
% . IDENT CapsuleInterface y=0 nexty=1
% . IDENT Capsule y=1 nexty=2
% . IDENT Interface y=2 nexty=3
% . IDENT Module y=3 nexty=4
% . IDENT GenericInterface y=4 nexty=5
% . IDENT GenericModule y=5 nexty=6
\rail@begin{6}{Compilation}
\rail@bar
\rail@nont{CapsuleInterface}[]
\rail@nextbar{1}
\rail@nont{Capsule}[]
\rail@nextbar{2}
\rail@nont{Interface}[]
\rail@nextbar{3}
\rail@nont{Module}[]
\rail@nextbar{4}
\rail@nont{GenericInterface}[]
\rail@nextbar{5}
\rail@nont{GenericModule}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . STRNG 'CAPSULE' y=0 nexty=1
% . STRNG 'INTERFACE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG ';' y=0 nexty=1
% . PLUS y=0 nexty=2
% . . IDENT Import y=0 nexty=1
% . . EMPTY y=1 nexty=2
% . PLUS y=0 nexty=2
% . . IDENT Port y=0 nexty=1
% . . EMPTY y=1 nexty=2
% . STRNG 'END' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '.' y=0 nexty=1
\rail@begin{2}{CapsuleInterface}
\rail@term{CAPSULE}[]
\rail@term{INTERFACE}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@plus
\rail@nont{Import}[]
\rail@nextplus{1}
\rail@endplus
\rail@plus
\rail@nont{Port}[]
\rail@nextplus{1}
\rail@endplus
\rail@term{END}[]
\rail@nont{id}[]
\rail@term{.}[]
\rail@end
% CAT y=0 nexty=1
% . STRNG 'PORT' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG ':' y=0 nexty=1
% . IDENT Protocol y=0 nexty=1
\rail@begin{1}{Port}
\rail@term{PORT}[]
\rail@nont{id}[]
\rail@term{:}[]
\rail@nont{Protocol}[]
\rail@end
% CAT y=0 nexty=5
% . STRNG 'CAPSULE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . CAT y=1 nexty=2
% . . . STRNG 'IMPLEMENTS' y=1 nexty=2
% . . . IDENT id y=1 nexty=2
% . STRNG ';' y=0 nexty=1
% . CR y=0 nexty=4
% . PLUS y=3 nexty=5
% . . EMPTY y=3 nexty=4
% . . IDENT Import y=4 nexty=5
% . PLUS y=3 nexty=5
% . . EMPTY y=3 nexty=4
% . . IDENT UseCapsule y=4 nexty=5
% . IDENT CapsuleBlock y=3 nexty=4
% . IDENT id y=3 nexty=4
% . STRNG '.' y=3 nexty=4
\rail@begin{5}{Capsule}
\rail@term{CAPSULE}[]
\rail@nont{id}[]
\rail@bar
\rail@nextbar{1}
\rail@term{IMPLEMENTS}[]
\rail@nont{id}[]
\rail@endbar
\rail@term{;}[]
\rail@cr{3}
\rail@plus
\rail@nextplus{4}
\rail@cnont{Import}[]
\rail@endplus
\rail@plus
\rail@nextplus{4}
\rail@cnont{UseCapsule}[]
\rail@endplus
\rail@nont{CapsuleBlock}[]
\rail@nont{id}[]
\rail@term{.}[]
\rail@end
% CAT y=0 nexty=2
% . PLUS y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT Declaration y=1 nexty=2
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT Connections y=1 nexty=2
% . STRNG 'BEGIN' y=0 nexty=1
% . IDENT Statements y=0 nexty=1
% . STRNG 'END' y=0 nexty=1
\rail@begin{2}{CapsuleBlock}
\rail@plus
\rail@nextplus{1}
\rail@cnont{Declaration}[]
\rail@endplus
\rail@bar
\rail@nextbar{1}
\rail@nont{Connections}[]
\rail@endbar
\rail@term{BEGIN}[]
\rail@nont{Statements}[]
\rail@term{END}[]
\rail@end
% CAT y=0 nexty=1
% . STRNG 'USECAPSULE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG ';' y=0 nexty=1
\rail@begin{1}{UseCapsule}
\rail@term{USECAPSULE}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@end
% CAT y=0 nexty=3
% . STRNG 'CONNECT' y=0 nexty=1
% . PLUS y=0 nexty=3
% . . CAT y=0 nexty=2
% . . . IDENT id y=0 nexty=1
% . . . BAR y=0 nexty=2
% . . . . STRNG '->' y=0 nexty=1
% . . . . STRNG '<=>' y=1 nexty=2
% . . . IDENT id y=0 nexty=1
% . . . STRNG ';' y=0 nexty=1
% . . EMPTY y=2 nexty=3
\rail@begin{3}{Connections}
\rail@term{CONNECT}[]
\rail@plus
\rail@nont{id}[]
\rail@bar
\rail@term{->}[]
\rail@nextbar{1}
\rail@term{<=>}[]
\rail@endbar
\rail@nont{id}[]
\rail@term{;}[]
\rail@nextplus{2}
\rail@endplus
\rail@end
% BAR y=0 nexty=10
% . STRNG 'Standard Modula-3 Declaration' y=0 nexty=1
% . CAT y=1 nexty=2
% . . STRNG 'TRIGGER' y=1 nexty=2
% . . IDENT id y=1 nexty=2
% . . STRNG 'ON' y=1 nexty=2
% . . IDENT Expr y=1 nexty=2
% . . STRNG ';' y=1 nexty=2
% . CAT y=2 nexty=4
% . . STRNG 'ACTIVITY' y=2 nexty=3
% . . IDENT id y=2 nexty=3
% . . STRNG '(' y=2 nexty=3
% . . IDENT Formals y=2 nexty=3
% . . STRNG ')' y=2 nexty=3
% . . STRNG '=' y=2 nexty=3
% . . IDENT Block y=2 nexty=3
% . . IDENT id y=2 nexty=3
% . . BAR y=2 nexty=4
% . . . EMPTY y=2 nexty=3
% . . . CAT y=3 nexty=4
% . . . . STRNG 'AFTER' y=3 nexty=4
% . . . . IDENT TimeExpr y=3 nexty=4
% . . STRNG ';' y=2 nexty=3
% . CAT y=4 nexty=6
% . . STRNG 'STATE' y=4 nexty=5
% . . IDENT id y=4 nexty=5
% . . PLUS y=4 nexty=6
% . . . IDENT TransitionDecl y=4 nexty=5
% . . . EMPTY y=5 nexty=6
% . . STRNG ';' y=4 nexty=5
% . CAT y=6 nexty=7
% . . STRNG 'START' y=6 nexty=7
% . . STRNG '=' y=6 nexty=7
% . . STRNG 'BEGIN' y=6 nexty=7
% . . IDENT Statements y=6 nexty=7
% . . STRNG 'END' y=6 nexty=7
% . . STRNG ';' y=6 nexty=7
% . CAT y=7 nexty=8
% . . STRNG 'READS' y=7 nexty=8
% . . IDENT id y=7 nexty=8
% . . STRNG ';' y=7 nexty=8
% . CAT y=8 nexty=9
% . . STRNG 'WRITES' y=8 nexty=9
% . . IDENT id y=8 nexty=9
% . . STRNG ';' y=8 nexty=9
% . CAT y=9 nexty=10
% . . STRNG 'SENDS' y=9 nexty=10
% . . IDENT id y=9 nexty=10
% . . STRNG ';' y=9 nexty=10
\rail@begin{10}{Declaration}
\rail@bar
\rail@term{Standard Modula-3 Declaration}[]
\rail@nextbar{1}
\rail@term{TRIGGER}[]
\rail@nont{id}[]
\rail@term{ON}[]
\rail@nont{Expr}[]
\rail@term{;}[]
\rail@nextbar{2}
\rail@term{ACTIVITY}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Formals}[]
\rail@term{)}[]
\rail@term{=}[]
\rail@nont{Block}[]
\rail@nont{id}[]
\rail@bar
\rail@nextbar{3}
\rail@term{AFTER}[]
\rail@nont{TimeExpr}[]
\rail@endbar
\rail@term{;}[]
\rail@nextbar{4}
\rail@term{STATE}[]
\rail@nont{id}[]
\rail@plus
\rail@nont{TransitionDecl}[]
\rail@nextplus{5}
\rail@endplus
\rail@term{;}[]
\rail@nextbar{6}
\rail@term{START}[]
\rail@term{=}[]
\rail@term{BEGIN}[]
\rail@nont{Statements}[]
\rail@term{END}[]
\rail@term{;}[]
\rail@nextbar{7}
\rail@term{READS}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@nextbar{8}
\rail@term{WRITES}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@nextbar{9}
\rail@term{SENDS}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=1
% . STRNG 'ON' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '(' y=0 nexty=1
% . IDENT Formals y=0 nexty=1
% . STRNG ')' y=0 nexty=1
% . STRNG '=' y=0 nexty=1
% . IDENT Block y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG ';' y=0 nexty=1
\rail@begin{1}{TransitionDecl}
\rail@term{ON}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Formals}[]
\rail@term{)}[]
\rail@term{=}[]
\rail@nont{Block}[]
\rail@nont{id}[]
\rail@term{;}[]
\rail@end
% BAR y=0 nexty=4
% . STRNG 'Standard Modula-3 Type' y=0 nexty=1
% . IDENT TimerType y=1 nexty=2
% . IDENT ModelingContainerType y=2 nexty=3
% . IDENT Protocol y=3 nexty=4
\rail@begin{4}{Type}
\rail@bar
\rail@term{Standard Modula-3 Type}[]
\rail@nextbar{1}
\rail@nont{TimerType}[]
\rail@nextbar{2}
\rail@nont{ModelingContainerType}[]
\rail@nextbar{3}
\rail@nont{Protocol}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . BAR y=0 nexty=2
% . . STRNG 'ONESHOT' y=0 nexty=1
% . . STRNG 'PERIODIC' y=1 nexty=2
% . BAR y=0 nexty=2
% . . STRNG 'CHANGEABLE' y=0 nexty=1
% . . STRNG 'FIXED' y=1 nexty=2
% . STRNG 'TIMER' y=0 nexty=1
% . STRNG 'DELAY' y=0 nexty=1
% . IDENT TimeExpr y=0 nexty=1
\rail@begin{2}{TimerType}
\rail@bar
\rail@term{ONESHOT}[]
\rail@nextbar{1}
\rail@term{PERIODIC}[]
\rail@endbar
\rail@bar
\rail@term{CHANGEABLE}[]
\rail@nextbar{1}
\rail@term{FIXED}[]
\rail@endbar
\rail@term{TIMER}[]
\rail@term{DELAY}[]
\rail@nont{TimeExpr}[]
\rail@end
% CAT y=0 nexty=3
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . IDENT tilde y=1 nexty=2
% . BAR y=0 nexty=3
% . . IDENT TypeName y=0 nexty=1
% . . CAT y=1 nexty=3
% . . . STRNG 'PROTOCOL' y=1 nexty=2
% . . . PLUS y=1 nexty=3
% . . . . EMPTY y=1 nexty=2
% . . . . IDENT MessageGroup y=2 nexty=3
% . . . STRNG 'END' y=1 nexty=2
\rail@begin{3}{Protocol}
\rail@bar
\rail@nextbar{1}
\rail@token{tilde}[]
\rail@endbar
\rail@bar
\rail@nont{TypeName}[]
\rail@nextbar{1}
\rail@term{PROTOCOL}[]
\rail@plus
\rail@nextplus{2}
\rail@cnont{MessageGroup}[]
\rail@endplus
\rail@term{END}[]
\rail@endbar
\rail@end
% CAT y=0 nexty=2
% . BAR y=0 nexty=2
% . . EMPTY y=0 nexty=1
% . . STRNG 'SYNCHRONOUS' y=1 nexty=2
% . BAR y=0 nexty=2
% . . STRNG 'INCOMING' y=0 nexty=1
% . . STRNG 'OUTGOING' y=1 nexty=2
% . PLUS y=0 nexty=2
% . . IDENT Message y=0 nexty=1
% . . EMPTY y=1 nexty=2
\rail@begin{2}{MessageGroup}
\rail@bar
\rail@nextbar{1}
\rail@term{SYNCHRONOUS}[]
\rail@endbar
\rail@bar
\rail@term{INCOMING}[]
\rail@nextbar{1}
\rail@term{OUTGOING}[]
\rail@endbar
\rail@plus
\rail@nont{Message}[]
\rail@nextplus{1}
\rail@endplus
\rail@end
% CAT y=0 nexty=1
% . STRNG 'MESSAGE' y=0 nexty=1
% . IDENT id y=0 nexty=1
% . STRNG '(' y=0 nexty=1
% . IDENT Formals y=0 nexty=1
% . STRNG ')' y=0 nexty=1
\rail@begin{1}{Message}
\rail@term{MESSAGE}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@nont{Formals}[]
\rail@term{)}[]
\rail@end
% BAR y=0 nexty=3
% . CAT y=0 nexty=2
% . . STRNG 'DICT' y=0 nexty=1
% . . BAR y=0 nexty=2
% . . . EMPTY y=0 nexty=1
% . . . IDENT IndexType y=1 nexty=2
% . . STRNG 'OF' y=0 nexty=1
% . . IDENT ElementType y=0 nexty=1
% . CAT y=2 nexty=3
% . . STRNG 'LIST' y=2 nexty=3
% . . STRNG 'OF' y=2 nexty=3
% . . IDENT ElementType y=2 nexty=3
\rail@begin{3}{ModelingContainerType}
\rail@bar
\rail@term{DICT}[]
\rail@bar
\rail@nextbar{1}
\rail@nont{IndexType}[]
\rail@endbar
\rail@term{OF}[]
\rail@nont{ElementType}[]
\rail@nextbar{2}
\rail@term{LIST}[]
\rail@term{OF}[]
\rail@nont{ElementType}[]
\rail@endbar
\rail@end
% BAR y=0 nexty=7
% . STRNG 'Standard Modula-3 Statement' y=0 nexty=1
% . CAT y=1 nexty=3
% . . STRNG 'SEND' y=1 nexty=2
% . . IDENT id y=1 nexty=2
% . . STRNG '(' y=1 nexty=2
% . . PLUS y=1 nexty=3
% . . . IDENT ActualParameter y=1 nexty=2
% . . . EMPTY y=2 nexty=3
% . . STRNG ')' y=1 nexty=2
% . . BAR y=1 nexty=3
% . . . EMPTY y=1 nexty=2
% . . . CAT y=2 nexty=3
% . . . . STRNG 'AFTER' y=2 nexty=3
% . . . . IDENT TimeExpr y=2 nexty=3
% . CAT y=3 nexty=5
% . . STRNG 'CALL' y=3 nexty=4
% . . IDENT id y=3 nexty=4
% . . STRNG '(' y=3 nexty=4
% . . PLUS y=3 nexty=5
% . . . IDENT ActualParameter y=3 nexty=4
% . . . EMPTY y=4 nexty=5
% . . STRNG ')' y=3 nexty=4
% . CAT y=5 nexty=6
% . . STRNG 'NEXT' y=5 nexty=6
% . . IDENT id y=5 nexty=6
% . CAT y=6 nexty=7
% . . STRNG 'FOREACH' y=6 nexty=7
% . . IDENT id y=6 nexty=7
% . . STRNG 'IN' y=6 nexty=7
% . . IDENT Expr y=6 nexty=7
% . . STRNG 'DO' y=6 nexty=7
% . . IDENT Statements y=6 nexty=7
% . . STRNG 'END' y=6 nexty=7
\rail@begin{7}{Statement}
\rail@bar
\rail@term{Standard Modula-3 Statement}[]
\rail@nextbar{1}
\rail@term{SEND}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@plus
\rail@nont{ActualParameter}[]
\rail@nextplus{2}
\rail@endplus
\rail@term{)}[]
\rail@bar
\rail@nextbar{2}
\rail@term{AFTER}[]
\rail@nont{TimeExpr}[]
\rail@endbar
\rail@nextbar{3}
\rail@term{CALL}[]
\rail@nont{id}[]
\rail@term{(}[]
\rail@plus
\rail@nont{ActualParameter}[]
\rail@nextplus{4}
\rail@endplus
\rail@term{)}[]
\rail@nextbar{5}
\rail@term{NEXT}[]
\rail@nont{id}[]
\rail@nextbar{6}
\rail@term{FOREACH}[]
\rail@nont{id}[]
\rail@term{IN}[]
\rail@nont{Expr}[]
\rail@term{DO}[]
\rail@nont{Statements}[]
\rail@term{END}[]
\rail@endbar
\rail@end
}
