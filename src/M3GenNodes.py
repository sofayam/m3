import string
import os
class BaseM3Gen:
    def regen(self,forDisplay=False):
        return string.join([kid.regen(forDisplay) for kid in self.kids],"")

class M3GenTerminal:
    def expCRs(self,s,forDisplay):
        if forDisplay:
            return s.replace('%0A',"\n")
        else:
            return s.replace('%0A',"\n")            
    def regen(self,forDisplay):
        return self.expCRs(self.leadChars,forDisplay) + self.tokVal()
class IdM3Gen(M3GenTerminal): pass
class ForIdM3Gen(M3GenTerminal): pass
class BindingIdM3Gen(M3GenTerminal): pass
class TCaseIdM3Gen(M3GenTerminal): pass
class IntM3Gen(M3GenTerminal): pass
class CharLiteralM3Gen(M3GenTerminal): pass
class TextLiteralM3Gen(M3GenTerminal): pass
class KeyWordM3Gen(M3GenTerminal): pass
class TokM3Gen(M3GenTerminal): pass
class SepM3Gen(M3GenTerminal): pass
class OpM3Gen(M3GenTerminal): pass

# The rest just needs to be there to keep the nodegenerator simple

class CapsuleInterfaceM3Gen: pass
class CapsuleM3Gen: pass
class InterfaceM3Gen: pass
class GenericInterfaceM3Gen: pass
class GenericModuleM3Gen: pass
class InterfaceInstantiationM3Gen: pass
class ModuleM3Gen: pass
class ModuleInstantiationM3Gen: pass
class FromImportM3Gen: pass
class UseCapsuleM3Gen: pass
class UseCapsuleListM3Gen: pass
class AsImportM3Gen: pass
class AsImportListM3Gen: pass
class IdListM3Gen: pass
class ImportListM3Gen: pass
class ImportItemM3Gen: pass
class RenamedImportItemM3Gen: pass
class InterfaceDeclListM3Gen: pass
class DeclListM3Gen: pass
class BlockM3Gen: pass
class CapsuleBlockM3Gen: pass
class ConstDeclsM3Gen: pass
class ConstDeclsListM3Gen: pass
class TypeDeclsM3Gen: pass
class TypeDeclsListM3Gen: pass
class ExceptionDeclsM3Gen: pass
class ExceptionDeclsListM3Gen: pass
class VariableDeclsM3Gen: pass
class VariableDeclsListM3Gen: pass
class ProcedureHeadM3Gen: pass
class ProcedureDeclM3Gen: pass
class SignatureM3Gen: pass
class MethodSignatureM3Gen: pass
class FormalsM3Gen: pass
class FormalM3Gen: pass
class RevealsM3Gen: pass
class RevealsListM3Gen: pass
class RevealM3Gen: pass
class GenFormalsM3Gen: pass
class GenActualsM3Gen: pass
class ConstDeclM3Gen: pass
class TypeDeclM3Gen: pass
class ExceptionDeclM3Gen: pass
class VariableDeclM3Gen: pass
class RaisesM3Gen: pass
class RaisesListM3Gen: pass
class RaisesAnyM3Gen: pass
class StatementsM3Gen: pass
class AssignStM3Gen: pass
class CallStM3Gen: pass
class SendStM3Gen: pass
class ReplyStM3Gen: pass
class SynCallStM3Gen: pass
class AssertStM3Gen: pass
class CaseStM3Gen: pass
class CaseEltListM3Gen: pass
class VCaseEltListM3Gen: pass
class CaseEltM3Gen: pass
class ExitStM3Gen: pass
class EvalStM3Gen: pass
class ForStM3Gen: pass
class IfStM3Gen: pass
class ElsifListM3Gen: pass
class ElsifM3Gen: pass
class LockStM3Gen: pass
class LoopStM3Gen: pass
class RaiseStM3Gen: pass
class RepeatStM3Gen: pass
class ReturnM3Gen: pass
class TCaseStM3Gen: pass
class TCaseListM3Gen: pass
class TryXptStM3Gen: pass
class TryFinStM3Gen: pass
class WhileStM3Gen: pass
class WithStM3Gen: pass
class BindingListM3Gen: pass
class HandlerListM3Gen: pass
class LabelsListM3Gen: pass
class LabelsM3Gen: pass
class CaseM3Gen: pass
class VCaseM3Gen: pass
class HandlerM3Gen: pass
class HandlerQualidListM3Gen: pass
class TypeListM3Gen: pass
class TCaseM3Gen: pass
class BindingM3Gen: pass
class ActualExprM3Gen: pass
class ActualM3Gen: pass
class ArrayM3Gen: pass
class PackedM3Gen: pass
class BracketedTypeM3Gen: pass
class EnumM3Gen: pass
class ObjectM3Gen: pass
class ObjectListM3Gen: pass
class ProcedureM3Gen: pass
class RecordM3Gen: pass
class VariantRecordM3Gen: pass
class RefM3Gen: pass
class SetM3Gen: pass
class SubrangeM3Gen: pass
class BrandM3Gen: pass
class FieldListM3Gen: pass
class FieldM3Gen: pass
class MethodListM3Gen: pass
class MethodM3Gen: pass
class OverrideListM3Gen: pass
class OverrideM3Gen: pass
class ConstExprM3Gen: pass
class BracketedExprM3Gen: pass
class BinaryExprM3Gen: pass
class UnaryExprM3Gen: pass
class OpExpM3Gen: pass
class SelectorExprM3Gen: pass
class SelectorListM3Gen: pass
class ExprListM3Gen: pass
class ExprM3Gen: pass
class OpListM3Gen: pass
class CaretM3Gen: pass
class DotM3Gen: pass
class ArrayRefSelectorM3Gen: pass
class ProcCallSelectorM3Gen: pass
class ActualListM3Gen: pass
class IndexListM3Gen: pass
class ConstructorM3Gen: pass
class ConsEltListM3Gen: pass
class ConsEltAssM3Gen: pass
class ConsEltRangeM3Gen: pass
class ConsEltExprM3Gen: pass
class ConsEltDotdotM3Gen: pass
class QualIdM3Gen: pass
class TypeNameM3Gen: pass
class RootM3Gen: pass
class UntracedRootM3Gen: pass
class NumberM3Gen: pass
class NullM3Gen: pass
class PortM3Gen: pass
class MessageGroupM3Gen: pass
class MessageGroupListM3Gen: pass
class MessageM3Gen: pass
class MessageListM3Gen: pass
class PortListM3Gen: pass
class ActivityDeclM3Gen: pass
class ActivityHeadM3Gen: pass
class StateDeclM3Gen: pass
class TimerModifierListM3Gen: pass
class TriggerM3Gen: pass
class TimerM3Gen: pass
class ConnectionM3Gen: pass
class PortConnectionM3Gen: pass
class ConnectionListM3Gen: pass
class ConnectionsM3Gen: pass
class TransitionListM3Gen: pass
class TransitionHeadM3Gen: pass
class TransitionDeclM3Gen: pass
class NextStM3Gen: pass
class StartDeclM3Gen: pass
class SendsDeclM3Gen: pass
class PythonStM3Gen: pass
class ResetStM3Gen: pass
class DataDependencyM3Gen: pass
class ListM3Gen: pass
class DictM3Gen: pass
class ForEachStM3Gen: pass
class ConsEltDictM3Gen: pass
class ProtocolM3Gen: pass
class ConjugatedProtocolM3Gen: pass
class AggregatedProtocolM3Gen: pass

class ScaledTypeM3Gen: pass
class ScaleEltM3Gen: pass
class ScaleListM3Gen: pass
class AfterClauseM3Gen: pass
